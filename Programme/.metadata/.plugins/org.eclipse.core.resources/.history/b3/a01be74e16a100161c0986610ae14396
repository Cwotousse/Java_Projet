package FENETRE;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;

import DAO.AbstractDAOFactory;
import DAO.DAO;
import POJO.Moniteur;
import POJO.Reservation;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import java.awt.Font;
import java.util.ArrayList;

import javax.swing.JSeparator;
import javax.swing.JTable;

public class F_AfficherRDV extends JFrame {

	private JPanel contentPane;
	private JTable table;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					F_AfficherRDV frame = new F_AfficherRDV();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public F_AfficherRDV() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);

		JComboBox comboBox = new JComboBox();
		comboBox.setBounds(10, 44, 414, 20);
		contentPane.add(comboBox);

		// ADF
		AbstractDAOFactory adf = AbstractDAOFactory.getFactory(AbstractDAOFactory.DAO_FACTORY);
		DAO<Reservation> ReservationDAO = adf.getReservationDAO();

		// New
		JLabel lblVosCours = new JLabel("Vos cours");
		JSeparator separator = new JSeparator();
		JLabel lbl_error = new JLabel("Error label");

		// Font
		lblVosCours.setFont(new Font("Yu Gothic UI", Font.PLAIN, 16));

		// SetBound
		lblVosCours.setBounds(10, 11, 76, 20);
		separator.setBounds(10, 37, 76, 20);
		lbl_error.setBounds(221, 15, 203, 16);

		// Add
		contentPane.add(lblVosCours);
		contentPane.add(separator);
		contentPane.add(lbl_error);


		// Liste RDV
		ArrayList<Reservation> listReserv = ReservationDAO.getList();

		if (listReserv != null){
			comboBox.removeAllItems();
			for(Reservation r : listReserv) 
				comboBox.addItem (/*r.getNumReservation() + " "  + -*/r.getClient().getNom() + " " + r.getEleve().getNom() + " " + r.getMoniteur().getNom() /*+ " " + r.getCours().getNomSport()*/);
		}
		else lbl_error.setText("Erreur ajout rdv");

		
		String[] colNames = new String[] {"Sender", "Subject", "Body"};
		String[][] rowData = new String[listReserv.size() / colNames.length][colNames.length];
		for (int i = 0; i < rowData.length; i++) {
			for (int j = 0; j < rowData[i].length; j++) {
				//rowData[i][j] = listReserv.get(i * colNames.length + j);
				rowData[i][j] = listReserv.get(i).toString();
			}
		}

		JTable table = new JTable(rowData, colNames);

		add(new JScrollPane(table));
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		pack();
		setLocationRelativeTo(null);
		setVisible(true);
		
		table = new JTable();
		table.setBounds(10, 77, 414, 163);
		contentPane.add(table);
	}
}
