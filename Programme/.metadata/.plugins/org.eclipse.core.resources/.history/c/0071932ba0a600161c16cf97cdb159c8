package be.mousty.accessToDao;

import java.sql.Date;
import java.util.ArrayList;

import be.mousty.dao.AbstractDAOFactory;
import be.mousty.dao.DAO;
import be.mousty.pojo.Accreditation;
import be.mousty.pojo.Moniteur;
import be.mousty.pojo.Utilisateur;

public class MoniteurATD extends UtilisateurATD{
	// VARIABLES 
	private int anneeDexp;
	private ArrayList<AccreditationATD> listAccreditation = new ArrayList<AccreditationATD>();



	// CONSTRUCTEURS
	public MoniteurATD(){}
	public MoniteurATD(String nom, String pre, String adresse, String sexe, Date dateNaissance, 
			String pseudo, String mdp, int typeUtilisateur, ArrayList<AccreditationATD> listAccreditation){
		super(nom, pre, adresse, sexe, dateNaissance, pseudo, mdp, typeUtilisateur);
		this.anneeDexp 	= 0 ;
		this.listAccreditation = listAccreditation;
	}

	// APPEL AUX METHODES DAO DANS LES CLASSES METIER
	AbstractDAOFactory adf = AbstractDAOFactory.getFactory(AbstractDAOFactory.DAO_FACTORY);
	DAO<Moniteur> MoniteurDao = adf.getMoniteurDAO();
	public int					 	create				(Utilisateur u) 	{ return UtilisateurDAO.create(u); 					}
	public boolean 					delete				()	 				{ return UtilisateurDAO.delete(null); 				}
	public Utilisateur 				getId				(Utilisateur u) 	{ return UtilisateurDAO.getId(u); 					}
	public boolean 					update				(Utilisateur u) 	{ return UtilisateurDAO.update(u); 					}
	public Utilisateur 				find				(int id) 			{ return UtilisateurDAO.find(id); 					} 
	public ArrayList<Utilisateur> 	getList				() 					{ return UtilisateurDAO.getList(); 					} 
	public ArrayList<Utilisateur> 	getListSelonCriteres(Utilisateur u) 	{ return UtilisateurDAO.getListSelonCriteres(u); 	}

	// METHODES 

	// Pour ne pas additionner 2 fois le même moniteur
	public void addAccreditation(AccreditationATD ac){
		if(!listAccreditation.contains(ac))
			listAccreditation.add(ac);
	}

	// METHODE SURCHARGEE
	@Override
	public String toString() { 
		return 
				super.toString()+ System.getProperty("line.separator")
				+ "MONITEUR, a accumule" + anneeDexp + " année(s) d'exérience." + System.getProperty("line.separator");
	}

	// PROPRIETES
	public int getAnneeExp		() 			{ return anneeDexp; }
	public void setAnneeExp 	(int el) 	{ this.anneeDexp = el; }
	public ArrayList<AccreditationATD> getAccrediList() { return listAccreditation; }
	public void setAccrediList	(ArrayList<AccreditationATD> accrediList) { this.listAccreditation = accrediList; 	}
}

