package POJO;

import java.util.ArrayList;

import DAO.AbstractDAOFactory;
import DAO.DAO;

public class CoursCollectif extends Cours{
	// VARIABLES
		private int 	numCoursCollectif;
		private String 	categorieAge;
		private String 	niveauCours;
		AbstractDAOFactory adf = AbstractDAOFactory.getFactory(AbstractDAOFactory.DAO_FACTORY);
		DAO<CoursCollectif> CoursCollectifDao = adf.getCoursCollectifDAO();
		
		// CONSTRUCTEURS
		public CoursCollectif (){}
		public CoursCollectif(String categorieAge, String niveauCours){
			this.categorieAge 	= categorieAge;
			this.niveauCours 	= niveauCours;
		}
		
		public CoursCollectif(int numCours, String nomSport, double prix, int minEleve, int maxEleve, String periodeCours, 
				String categorieAge, String niveauCours){
			super(numCours,nomSport, prix, minEleve, maxEleve, periodeCours);
			this.categorieAge 	= categorieAge;
			this.niveauCours 	= niveauCours;
		}
		
		// METHODES
		public int createCoursCollectif					() 		{ return CoursCollectifDao.create(this); }
		public void deleteCoursCollectif				()		{ CoursCollectifDao.delete(null); }
		public CoursCollectif rechercherCoursCollectif	(int id){ return CoursCollectifDao.find(id); }
		public ArrayList<CoursCollectif> getListCoursCollectif()		{ return CoursCollectifDao.getList(); }
		
		@Override
		public ArrayList<CoursCollectif> getListCoursSelonId(int idMoniteur, int idEleve){
			System.out.println("Id moniteur : " + idMoniteur);
			ArrayList<CoursCollectif> listFull = CoursCollectifDao.getList(); 
			ArrayList<CoursCollectif> listSelonId = new ArrayList<CoursCollectif>();
			// new ArrayList<Accreditation>();
			Moniteur M = new Moniteur();
			M = M.findMoniteur(idMoniteur);
			ArrayList<Accreditation> listAccred = M.getAccrediList(); // Liste des accreditations du moniteur
			for(CoursCollectif C : listFull){
				for(Accreditation A : listAccred){
					if(A.getNom().equals(C.getNomSport())){
						// Si l'accreditation du moniteur correspond à celle du cours proposé, on l'ajoute dans la liste triée
						listSelonId.add(C);
					}
				}
			}
			return listSelonId;
		}
		
		// FONCTION SURCHARGEE
			@Override
			public String toString() { 
				return  
						super.toString()+ System.getProperty("line.separator") + 
						"Catégorie d'age : " + categorieAge + System.getProperty("line.separator") + 
						"Niveau du cours : " + niveauCours + System.getProperty("line.separator");
			}
		
		// PROPRIETES
		public int getNumCoursCollectif		() 							{ return numCoursCollectif; }
		public String getCategorieAge		() 							{ return categorieAge; }
		public String getNiveauCours		() 							{ return niveauCours; }
		public void setNumCoursCollectif	(int numCoursCollectif) 	{ this.numCoursCollectif = numCoursCollectif; }
		public void setCategorieAge			(String el) 				{ categorieAge = el; }
		public void setNiveauCours			(String niveauCours) 		{ this.niveauCours = niveauCours; }
}