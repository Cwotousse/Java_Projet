package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;

import POJO.Eleve;
import POJO.Personne;
import POJO.Utilisateur;

public class EleveDAO extends DAO<Eleve> {
	public EleveDAO(Connection conn) {
		super(conn);
	}

	public int create(Eleve obj) {
		try {
			
			int numPersonne = obj.getNumPersonne();
			if (numPersonne == 0){ // La personne n'existe pas
				AbstractDAOFactory adf = AbstractDAOFactory.getFactory(AbstractDAOFactory.DAO_FACTORY);
				DAO<Personne> PersonneDao = adf.getPersonneDAO();
				numPersonne = PersonneDao.create(new Personne(obj.getNom(), obj.getPre(), obj.getAdresse(), obj.getSexe(), obj.getDateNaissance()));
//				String sql1 = "SELECT numPersonne from Personne where nom = '" + obj.getNom() + "' and prenom = '" + obj.getPre() + 
//						"' AND adresse = '"+ obj.getAdresse() + "' AND SEXE ='"+ obj.getSexe() + "' AND dateNaissance = '" + obj.getDateNaissance() + "';";
//				PreparedStatement pst1 = this.connect.prepareStatement(sql1);
//				ResultSet rs1 = pst1.executeQuery();
//				while (rs1.next()) numPersonne = rs1.getInt(1); // On a l'id de l'utilisateur
				
				if (numPersonne == -1){
					System.out.println("Alternative 2");
					return -1;
				}
			}
			String requete5 = "INSERT INTO Eleve (aPrisUneAssurance, categorie, numPersonne) VALUES (?,?,?)";
			PreparedStatement pst5 = connect.prepareStatement(requete5);

			pst5.setBoolean(1, obj.getAUneAssurance());
			pst5.setString(2, obj.getCategorie());
			pst5.setInt(3, numPersonne);
			pst5.executeUpdate();
			pst5.close();
			System.out.println("Ajout d'un eleve effectue");
			return numPersonne;

		} 
		catch (SQLException e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
			return -1;
		}
	}

	public boolean delete(Eleve obj) {
		return false;
	}

	public boolean update(Eleve obj) {
		return false;
	}

	// On cherche une Eleve grâce à son id
	public Eleve find(int id) {
		/*Eleve eleve = new Eleve();
		PreparedStatement pst = null;
		try {
			String sql = "SELECT * FROM Eleve WHERE numEleve = ?";
			pst = this.connect.prepareStatement(sql);
			pst.setInt(1, id);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				eleve.setNumUtilisateur(rs.getInt("numUtilisateur"));
				eleve.setNumEleve(rs.getInt("numEleve"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			if (pst != null) {
				try {
					pst.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
		return eleve;*/
		return null;
	}



	public ArrayList<Eleve> getList() {
		/*Eleve eleve = null;
		ArrayList<Eleve> liste = new ArrayList<Eleve>();
		PreparedStatement pst = null;
		try {
			String sql = "SELECT * FROM Eleve";
			pst = this.connect.prepareStatement(sql);
			ResultSet rs = pst.executeQuery();
			while (rs.next()) {
				eleve.setNumUtilisateur(rs.getInt("numUtilisateur"));
				eleve.setNumEleve(rs.getInt("numEleve"));
				liste.add(eleve);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			if (pst != null) {
				try {
					pst.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
		return liste;*/
		return null;
	}

	@Override
	public  int verifPseudoMdp(Utilisateur obj){
		// TODO Auto-generated method stub
		return -1;
	}
}